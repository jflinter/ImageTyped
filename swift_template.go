package main

const swiftTemplate = `
{{define "enumTemplate"}}
public enum {{.Name}}: String, ResourceImageConvertible {
    {{with .Values}}{{range .}}
    case {{.Name}} = "{{.RawValue}}"{{end}}{{end}}
    {{with .Nested}}{{range .}}
    {{template "enumTemplate" .}}{{end}}{{end}}
}
{{end}}
// This code is autogenerated by Resourceful - do not modify

#if os(iOS)
import UIKit
#elseif os(OSX)
import AppKit
#endif

public protocol ResourceImageConvertible {}

public extension ResourceImageConvertible where Self: RawRepresentable, Self.RawValue == String {
#if os(iOS)
    public var image: UIImage? {
        return UIImage(named: self.rawValue)
    }
#elseif os(OSX)
    public var image: NSImage? {
        return NSImage(named: self.rawValue)
    }
#endif
}

public enum Resource {
    {{template "enumTemplate" .}}
}

`
